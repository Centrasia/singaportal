<?php
error_reporting(1); $scriptVersion = '2.20'; include_once('sfm_config.php'); if (!$mailTo[0]) { Err('受取先メールアドレスが設定されてません');} $mode = $_POST['mode']; $script_name = preg_replace('/.+\/(.*)/', '$1', $_SERVER['REQUEST_URI']); switch ($mode) { case 'SEND': session_cache_limiter('nocache'); session_start(); if (!$_SESSION['SFM']) { Err('セッションデータがありません');} $mailTo = ($mailTo[$_SESSION['SFM']['mailToNum']]) ? $mailTo[$_SESSION['SFM']['mailToNum']] : $mailTo[0]; $mailFrom = (!$_SESSION['SFM']['email']) ? 'S.B.FormMail' : $_SESSION['SFM']['email']; include_once('sfm_mail_tmpl.php'); SendMail($mailTo, $mailSubject, $mailMessage, $mailFrom, $mailBcc); if (($_POST['autoReply'] || $_SESSION['SFM']['autoReply']) && $_SESSION['SFM']['email'] && is_file('sfm_reply_tmpl.php')) { include_once('sfm_reply_tmpl.php'); $replyAddress = ($replyAddress) ? $replyAddress : $mailTo; if ($replyName) { $replyName = EnCode($replyName, 'JIS', 'UTF-8'); $replyAddress = '=?iso-2022-jp?B?'.base64_encode($replyName) . '?= <' . $replyAddress . '>';} SendMail($_SESSION['SFM']['email'], $replySubject, $replyMessage, $replyAddress, $replyBcc);} unset($_SESSION['SFM']); include_once('completion.html'); break; case 'CONFIRM': if ($_SERVER['HTTP_REFERER'] != 'http://'.$_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'] && $refCheck) { Err('外部から利用は出来ません');} session_cache_limiter('nocache'); session_start(); unset($_SESSION['SFM']); foreach ($_POST as $key => $value) { if (is_array($value)) { $value = implode("\t", $value);} if (!$ill_slash) { $value = (!get_magic_quotes_gpc()) ? addslashes($value) : $value;} if (!$ill_char) { $value = EnCode($value, 'UTF-8', $baseEnc);} $value = mb_convert_kana($value, 'KV', 'UTF-8'); $name = preg_replace('/(.+)_s$/', "$1", $key); if (preg_match('/_s$/', $key) && $value == '') { $_SESSION['SFM'][$name] = '::INPUT ERROR::'; $error = 1;} elseif ($name == 'email' && $value) {if (!preg_match("/^[\w\-\.]+\@[\w\-\.]+\.([a-z]+)$/", $value)) {$_SESSION['SFM']['email'] = '::EMAIL ERROR::'; $error = $email = 1;} else {$_SESSION['SFM']['email'] = $email = $value;}} elseif ($name == 'emailcheck') {if ($email != 1 && $email != $value) {$_SESSION['SFM']['email'] = '::EMAIL CHECK ERROR::'; $error = 1;}} elseif ($maxText && strlen($value) > $maxText) { $_SESSION['SFM'][$name] = '::MAXTEXT ERROR::'; $error = 1;} else { $_SESSION['SFM'][$name] = $value;}} $_SESSION['SFM']['InputErr'] = $error; $sfm_script = $script_name . ((SID) ? '?'.strip_tags(SID) : ''); include_once('confirm.html'); break; default: session_cache_limiter('private_no_expire'); session_start(); unset($_SESSION['SFM']); $sfm_script = $script_name; include_once('form.html');} exit; function FORM_DATA_H($name) {global $baseEnc, $maxText; $errArray = array('::INPUT ERROR::'=>'<font color="#ff0000">必須項目です</font>','::EMAIL ERROR::'=>'<font color="#ff0000">メールアドレスが正しくありません</font>','::EMAIL CHECK ERROR::'=>'<font color="#ff0000">メールアドレスが一致しません</font>','::MAXTEXT ERROR::'=>'<font color="#ff0000">文字数が多すぎます（' . number_format($maxText) . '字まで）</font>'); $value = $_SESSION['SFM'][$name];$value = (get_magic_quotes_gpc()) ? stripslashes($value) : $value;$value = str_replace("\t", "\n", $value); $value = nl2br(htmlspecialchars($value, ENT_QUOTES, 'UTF-8'));$value = (preg_match('/::.+::/', $value)) ? '<span class="ERR">' . $errArray[$value] . '</span>' : $value; $value = ($value != '') ? $value : '&nbsp;'; return EnCode($value, $baseEnc, 'UTF-8');}function FORM_DATA_M($name) { $value = $_SESSION['SFM'][$name]; $value = (get_magic_quotes_gpc()) ? stripslashes($value) : $value; $value = str_replace("\t", ',', $value); return $value;} function SendMail($to, $sub, $msg, $from, $bcc) { global $scriptVersion; global $returnPath; global $ill_header; $sub = EnCode($sub, 'JIS', 'UTF-8'); $msg = EnCode($msg, 'JIS', 'UTF-8'); $rn = array("\r\n", "\n", "\r"); $msg = str_replace($rn, "\n", $msg); $rtf = ($ill_header) ? "\n" : "\r\n"; $header = 'From: ' . $from . $rtf; $header .= 'Bcc: ' . $bcc . $rtf; $header .= 'X-Mailer: Sapphirus.Biz Formmail (Ver. ' . $scriptVersion . '/PHP)' . $rtf; $header .= 'Mime-Version: 1.0' . $rtf; $header .= 'Content-Type: text/plain; charset=ISO-2022-JP' . $rtf; $header .= 'Content-Transfer-Encoding: 7bit'; $sub = '=?iso-2022-jp?B?' . base64_encode($sub) . '?='; if ($returnPath) { mail($to, $sub, $msg, $header, '-f' . $returnPath); } else { mail($to, $sub, $msg, $header); } return; } function USERINFO() { return @gethostbyaddr($_SERVER['REMOTE_ADDR']) . "\n" . $_SERVER['HTTP_USER_AGENT'] . "\n" . date("Y/m/d - H:i:s"); } function EnCode($value, $chg, $org) { if (!extension_loaded('mbstring')) { Err('mbstring関数が利用できません'); } return @mb_convert_encoding($value, $chg, $org); } function Err($err) { echo <<<EOM
<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>エラー：$err</title></head><body style="font-size: 12px; line-height: 1.8em;"><strong>エラー : </strong>$err<br><input type="button" value="戻る" onclick="history.back();"></body></html>
EOM;
exit;}
?>
